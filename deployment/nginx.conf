# Nginx Configuration for AI Desktop
# Place this file in /etc/nginx/sites-available/ on your VPS
# Then symlink: sudo ln -s /etc/nginx/sites-available/ai-desktop /etc/nginx/sites-enabled/

# HTTP Server (redirects to HTTPS in production)
server {
    listen 80;
    listen [::]:80;

    # Replace with your domain or VPS IP
    server_name 92.112.181.127;

    # For SSL cert generation (Let's Encrypt)
    location /.well-known/acert-challenge/ {
        root /var/www/certbot;
    }

    # Redirect to HTTPS (uncomment when SSL is ready)
    # return 301 https://$server_name$request_uri;

    # Temporary: Proxy to Next.js (comment out when SSL is ready)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# HTTPS Server (uncomment when SSL certificate is ready)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name your-domain.com www.your-domain.com;
#
#     # SSL Certificate paths (Let's Encrypt)
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
#
#     # Security Headers
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#
#     # Gzip Compression
#     gzip on;
#     gzip_vary on;
#     gzip_min_length 1024;
#     gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;
#
#     # Rate Limiting (adjust as needed)
#     limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
#     limit_req zone=api_limit burst=20 nodelay;
#
#     # Proxy to Next.js Application
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#
#         # Timeout settings
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # Buffer settings
#         proxy_buffer_size 4k;
#         proxy_buffers 8 4k;
#         proxy_busy_buffers_size 8k;
#     }
#
#     # Static files caching
#     location /_next/static/ {
#         proxy_pass http://localhost:3000;
#         proxy_cache_valid 60m;
#         add_header Cache-Control "public, immutable";
#     }
#
#     # Images and assets caching
#     location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
#         proxy_pass http://localhost:3000;
#         expires 30d;
#         add_header Cache-Control "public, immutable";
#     }
#
#     # API routes (no caching)
#     location /api/ {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#         add_header Cache-Control "no-store, no-cache, must-revalidate";
#     }
# }
